{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ChehChen\\\\Desktop\\\\student_examples\\\\Project\\\\unit_4\\\\proj4FE\\\\proj4fe\\\\src\\\\components\\\\auth\\\\AuthProvider.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useCookies } from 'react-cookie';\nimport jwtDecode from 'jwt-decode'; // Import jwt-decode library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  login: userToken => {},\n  logout: () => {},\n  isAuthenticated: () => {}\n});\nconst AUTH_TOKEN_NAME = 'userAuthToken';\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [cookies, setCookie, removeCookie] = useCookies([AUTH_TOKEN_NAME]);\n  useEffect(() => {\n    // Check if token exists in cookies\n    const token = getStoredToken();\n    if (token) {\n      const decodedToken = jwtDecode(token);\n      setUser(decodedToken);\n    }\n  }, [cookies]);\n  const getStoredToken = () => {\n    const {\n      userAuthToken\n    } = cookies;\n    return userAuthToken;\n  };\n  const isAuthenticated = () => {\n    return user !== null;\n  };\n  const login = userToken => {\n    setCookie(AUTH_TOKEN_NAME, userToken);\n  };\n  const logout = () => {\n    // Remove token from local storage\n    removeCookie(AUTH_TOKEN_NAME);\n\n    // Reset the user state\n    setUser(null);\n  };\n  const value = {\n    user,\n    login,\n    isAuthenticated,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(AuthProvider, \"cTi593RSLap8dwuM/iJ5Fis71mc=\", false, function () {\n  return [useCookies];\n});\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useCookies","jwtDecode","jsxDEV","_jsxDEV","AuthContext","user","login","userToken","logout","isAuthenticated","AUTH_TOKEN_NAME","AuthProvider","children","_s","setUser","cookies","setCookie","removeCookie","token","getStoredToken","decodedToken","userAuthToken","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/ChehChen/Desktop/student_examples/Project/unit_4/proj4FE/proj4fe/src/components/auth/AuthProvider.jsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport jwtDecode from 'jwt-decode'; // Import jwt-decode library\r\n\r\nconst AuthContext = createContext({\r\n    user: null,\r\n    login: (userToken) => { },\r\n    logout: () => { },\r\n    isAuthenticated: () => { },\r\n});\r\nconst AUTH_TOKEN_NAME = 'userAuthToken';\r\nexport function AuthProvider({ children }) {\r\n    const [user, setUser] = useState(null);\r\n    const [cookies, setCookie, removeCookie] = useCookies([AUTH_TOKEN_NAME]);\r\n    useEffect(() => {\r\n        // Check if token exists in cookies\r\n        const token = getStoredToken();\r\n        if (token) {\r\n            const decodedToken = jwtDecode(token);\r\n            setUser(decodedToken);\r\n\r\n        }\r\n    }, [cookies]);\r\n\r\n    const getStoredToken = () => {\r\n        const { userAuthToken } = cookies;\r\n\r\n        return userAuthToken;\r\n    };\r\n\r\n    const isAuthenticated = () => {\r\n        return user !== null;\r\n    };\r\n\r\n    const login = (userToken) => {\r\n        setCookie(AUTH_TOKEN_NAME, userToken);\r\n    };\r\n\r\n    const logout = () => {\r\n        // Remove token from local storage\r\n        removeCookie(AUTH_TOKEN_NAME);\r\n\r\n        // Reset the user state\r\n        setUser(null);\r\n    };\r\n\r\n    const value = {\r\n        user,\r\n        login,\r\n        isAuthenticated,\r\n        logout\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n\r\n\r\n}\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,UAAU,QAAQ,cAAc;AACzC,OAAOC,SAAS,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,gBAAGR,aAAa,CAAC;EAC9BS,IAAI,EAAE,IAAI;EACVC,KAAK,EAAGC,SAAS,IAAK,CAAE,CAAC;EACzBC,MAAM,EAAEA,CAAA,KAAM,CAAE,CAAC;EACjBC,eAAe,EAAEA,CAAA,KAAM,CAAE;AAC7B,CAAC,CAAC;AACF,MAAMC,eAAe,GAAG,eAAe;AACvC,OAAO,SAASC,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACR,IAAI,EAAES,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACgB,OAAO,EAAEC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,UAAU,CAAC,CAACU,eAAe,CAAC,CAAC;EACxEZ,SAAS,CAAC,MAAM;IACZ;IACA,MAAMoB,KAAK,GAAGC,cAAc,CAAC,CAAC;IAC9B,IAAID,KAAK,EAAE;MACP,MAAME,YAAY,GAAGnB,SAAS,CAACiB,KAAK,CAAC;MACrCJ,OAAO,CAACM,YAAY,CAAC;IAEzB;EACJ,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEb,MAAMI,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAM;MAAEE;IAAc,CAAC,GAAGN,OAAO;IAEjC,OAAOM,aAAa;EACxB,CAAC;EAED,MAAMZ,eAAe,GAAGA,CAAA,KAAM;IAC1B,OAAOJ,IAAI,KAAK,IAAI;EACxB,CAAC;EAED,MAAMC,KAAK,GAAIC,SAAS,IAAK;IACzBS,SAAS,CAACN,eAAe,EAAEH,SAAS,CAAC;EACzC,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACjB;IACAS,YAAY,CAACP,eAAe,CAAC;;IAE7B;IACAI,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,MAAMQ,KAAK,GAAG;IACVjB,IAAI;IACJC,KAAK;IACLG,eAAe;IACfD;EACJ,CAAC;EAED,oBACIL,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAV,QAAA,EAC9BA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAI/B;AAACd,EAAA,CAjDeF,YAAY;EAAA,QAEmBX,UAAU;AAAA;AAAA4B,EAAA,GAFzCjB,YAAY;AAkD5B,OAAO,SAASkB,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACtB,OAAOjC,UAAU,CAACO,WAAW,CAAC;AAClC;AAAC0B,GAAA,CAFeD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}